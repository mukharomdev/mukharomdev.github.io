1:"$Sreact.fragment"
2:I[7397,[],""]
3:I[8513,[],""]
5:I[3514,[],"OutletBoundary"]
8:I[3514,[],"ViewportBoundary"]
a:I[3514,[],"MetadataBoundary"]
c:I[1612,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/cc1b38a888361ae0.css","style"]
:HL["/_next/static/css/a218dfb468eefcdf.css","style"]
0:{"P":null,"b":"zB4SN0XwAB_SWMRVvwFhG","p":"","c":["","blog","database-relasi"],"i":false,"f":[[["",{"children":["blog",{"children":[["slug","database-relasi","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/cc1b38a888361ae0.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased ","children":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-100","children":["$","div",null,{"className":"container mx-auto p-4 bg-white rounded-lg shadow-lg","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"$undefined",[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","section",null,{"className":" prose lg:prose-3xl prose-img:rounded-xl prose-headings:underline prose-a:text-lime-600 prose-code:text-lime-500 mx-auto  ","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","database-relasi","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4","$undefined",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a218dfb468eefcdf.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L5",null,{"children":["$L6","$L7",null]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","YHBVN9OSB1gugwq4KYkpe",{"children":[["$","$L8",null,{"children":"$L9"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],["$","$La",null,{"children":"$Lb"}]]}],false]],"m":"$undefined","G":["$c","$undefined"],"s":false,"S":true}
d:I[4184,["161","static/chunks/161-e1f62ef38275032d.js","953","static/chunks/app/blog/%5Bslug%5D/page-df444d222e09a7de.js"],""]
e:I[8161,["161","static/chunks/161-e1f62ef38275032d.js","953","static/chunks/app/blog/%5Bslug%5D/page-df444d222e09a7de.js"],"Image"]
f:T161b,<p>Relasi dalam database adalah cara tabel-tabel dalam database saling terhubung. Ada beberapa jenis relasi yang umum digunakan, yaitu:</p>
<ol>
<li><strong>One-to-One (1:1)</strong></li>
<li><strong>One-to-Many (1:N)</strong></li>
<li><strong>Many-to-Many (N:M)</strong></li>
</ol>
<p>Berikut penjelasan lengkap untuk masing-masing relasi:</p>
<hr>
<h3>1. <strong>One-to-One (1:1)</strong></h3>
<p>Relasi one-to-one terjadi ketika satu record di tabel A hanya terkait dengan satu record di tabel B, dan sebaliknya.</p>
<h4>Contoh:</h4>
<ul>
<li><strong>Tabel User</strong> dan <strong>Tabel Profile</strong>:
<ul>
<li>Setiap user hanya memiliki satu profile.</li>
<li>Setiap profile hanya dimiliki oleh satu user.</li>
</ul>
</li>
</ul>
<h4>Implementasi di Database:</h4>
<ul>
<li>Tambahkan foreign key di salah satu tabel (biasanya di tabel yang lebih "lemah" atau opsional).</li>
<li>Contoh:
<pre><code class="language-sql">CREATE TABLE Users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50)
);

CREATE TABLE Profiles (
    id SERIAL PRIMARY KEY,
    userId INT UNIQUE, -- Foreign key dengan constraint UNIQUE
    address TEXT,
    FOREIGN KEY (userId) REFERENCES Users(id)
);
</code></pre>
</li>
</ul>
<h4>Implementasi di Sequelize:</h4>
<pre><code class="language-javascript">const User = sequelize.define('User', {
  username: DataTypes.STRING,
});

const Profile = sequelize.define('Profile', {
  address: DataTypes.TEXT,
});

// Relasi One-to-One
User.hasOne(Profile); // User memiliki satu Profile
Profile.belongsTo(User); // Profile dimiliki oleh satu User
</code></pre>
<hr>
<h3>2. <strong>One-to-Many (1:N)</strong></h3>
<p>Relasi one-to-many terjadi ketika satu record di tabel A dapat terkait dengan banyak record di tabel B, tetapi satu record di tabel B hanya terkait dengan satu record di tabel A.</p>
<h4>Contoh:</h4>
<ul>
<li><strong>Tabel User</strong> dan <strong>Tabel Post</strong>:
<ul>
<li>Satu user dapat memiliki banyak post.</li>
<li>Setiap post hanya dimiliki oleh satu user.</li>
</ul>
</li>
</ul>
<h4>Implementasi di Database:</h4>
<ul>
<li>Tambahkan foreign key di tabel yang memiliki banyak record (biasanya tabel "banyak").</li>
<li>Contoh:
<pre><code class="language-sql">CREATE TABLE Users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50)
);

CREATE TABLE Posts (
    id SERIAL PRIMARY KEY,
    userId INT, -- Foreign key
    content TEXT,
    FOREIGN KEY (userId) REFERENCES Users(id)
);
</code></pre>
</li>
</ul>
<h4>Implementasi di Sequelize:</h4>
<pre><code class="language-javascript">const User = sequelize.define('User', {
  username: DataTypes.STRING,
});

const Post = sequelize.define('Post', {
  content: DataTypes.TEXT,
});

// Relasi One-to-Many
User.hasMany(Post); // User memiliki banyak Post
Post.belongsTo(User); // Post dimiliki oleh satu User
</code></pre>
<hr>
<h3>3. <strong>Many-to-Many (N:M)</strong></h3>
<p>Relasi many-to-many terjadi ketika satu record di tabel A dapat terkait dengan banyak record di tabel B, dan sebaliknya.</p>
<h4>Contoh:</h4>
<ul>
<li><strong>Tabel Student</strong> dan <strong>Tabel Course</strong>:
<ul>
<li>Satu student dapat mengambil banyak course.</li>
<li>Satu course dapat diambil oleh banyak student.</li>
</ul>
</li>
</ul>
<h4>Implementasi di Database:</h4>
<ul>
<li>Gunakan <strong>tabel perantara (junction table)</strong> untuk menghubungkan kedua tabel.</li>
<li>Contoh:
<pre><code class="language-sql">CREATE TABLE Students (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50)
);

CREATE TABLE Courses (
    id SERIAL PRIMARY KEY,
    title VARCHAR(100)
);

-- Tabel perantara
CREATE TABLE StudentCourses (
    studentId INT,
    courseId INT,
    PRIMARY KEY (studentId, courseId),
    FOREIGN KEY (studentId) REFERENCES Students(id),
    FOREIGN KEY (courseId) REFERENCES Courses(id)
);
</code></pre>
</li>
</ul>
<h4>Implementasi di Sequelize:</h4>
<pre><code class="language-javascript">const Student = sequelize.define('Student', {
  name: DataTypes.STRING,
});

const Course = sequelize.define('Course', {
  title: DataTypes.STRING,
});

// Relasi Many-to-Many
Student.belongsToMany(Course, { through: 'StudentCourses' }); // Student dapat mengambil banyak Course
Course.belongsToMany(Student, { through: 'StudentCourses' }); // Course dapat diambil oleh banyak Student
</code></pre>
<hr>
<h3>4. <strong>Perbedaan Utama Antar Relasi</strong></h3>
<div class="overflow-x-auto bg-lime-100"><table>
<thead>
<tr>
<th><strong>Relasi</strong></th>
<th><strong>Deskripsi</strong></th>
<th><strong>Contoh</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>One-to-One</strong></td>
<td>Satu record di tabel A terkait dengan satu record di tabel B, dan sebaliknya.</td>
<td>User dan Profile</td>
</tr>
<tr>
<td><strong>One-to-Many</strong></td>
<td>Satu record di tabel A terkait dengan banyak record di tabel B.</td>
<td>User dan Post</td>
</tr>
<tr>
<td><strong>Many-to-Many</strong></td>
<td>Banyak record di tabel A terkait dengan banyak record di tabel B.</td>
<td>Student dan Course</td>
</tr>
</tbody>
</table></div>
<hr>
<h3>5. <strong>Kapan Menggunakan Relasi Tersebut?</strong></h3>
<ul>
<li><strong>One-to-One</strong>: Ketika data dapat dipisah menjadi dua tabel, tetapi setiap record hanya memiliki satu hubungan.</li>
<li><strong>One-to-Many</strong>: Ketika satu entitas memiliki banyak entitas terkait (misalnya, satu user memiliki banyak post).</li>
<li><strong>Many-to-Many</strong>: Ketika banyak entitas dari satu tabel terkait dengan banyak entitas dari tabel lain (misalnya, banyak student mengambil banyak course).</li>
</ul>
<hr>
<p>Jika Anda membutuhkan contoh lebih detail atau implementasi spesifik, silakan beri tahu! 😊</p>
4:["$","main",null,{"className":"container","children":[["$","div",null,{"className":"border-b dark:bg-slate-800 bg-neutral-50 border-neutral-200","children":["$","div",null,{"className":" mx-auto px-5","children":["$","div",null,{"className":"py-2 text-center text-sm","children":["source code blog ini bisa ditemukan di link ini"," ",["$","a",null,{"href":"https://github.com/mukharomdev/mukharomdev.github.io","className":"underline hover:text-blue-600 duration-200 transition-colors","children":"available on GitHub"}],"."]}]}]}],["$","div",null,{"className":" mx-auto px-5","children":[["$","h2",null,{"className":"text-2xl md:text-4xl font-bold tracking-tight md:tracking-tighter leading-tight mb-20 mt-8 flex items-center","children":[["$","$Ld",null,{"href":"/","className":"hover:underline","children":"Blog"}],"."]}],["$","article",null,{"className":"mb-32","children":[[["$","h1",null,{"className":"text-3xl text-center md:text-5xl lg:text-6xl font-bold tracking-tighter leading-tight md:leading-none mb-12 text-center md:text-left","children":"Relasi dalam Perancangan Database"}],["$","div",null,{"className":"hidden md:block md:mb-12","children":["$","div",null,{"className":"flex items-center","children":[["$","img",null,{"src":"/assets/blog/authors/mukharomdev.png","className":"w-12 h-12 rounded-full mr-4","alt":"mukharomdev"}],["$","div",null,{"className":"text-xl font-bold","children":"mukharomdev"}]]}]}],["$","div",null,{"className":"mb-8 md:mb-16 sm:mx-0","children":["$","div",null,{"className":"sm:mx-0","children":["$","$Le",null,{"src":"/assets/blog/database/database.png","alt":"Cover Image for Relasi dalam Perancangan Database","className":"shadow-sm w-full sm:w-[400px] md:w-[600px] lg:w-[800px] max-h-[500px] mx-auto block","width":120,"height":80}]}]}],["$","div",null,{"className":"max-w-2xl mx-auto","children":[["$","div",null,{"className":"block md:hidden mb-6","children":["$","div",null,{"className":"flex items-center","children":[["$","img",null,{"src":"/assets/blog/authors/mukharomdev.png","className":"w-12 h-12 rounded-full mr-4","alt":"mukharomdev"}],["$","div",null,{"className":"text-xl font-bold","children":"mukharomdev"}]]}]}],["$","div",null,{"className":"mb-6 text-lg","children":["$","time",null,{"dateTime":"2025-03-14T21:51:17.140Z","children":"March\t14, 2025"}]}]]}]],["$","div",null,{"className":"max-w-2xl mx-auto","children":["$","div",null,{"className":"markdown-styles_markdown__ORfR8 prose prose-code ","dangerouslySetInnerHTML":{"__html":"$f"}}]}]]}]]}]]}]
9:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
6:null
7:null
b:[["$","title","0",{"children":"Relasi dalam Perancangan Database | mukharomdev blog build with Markdown"}],["$","meta","1",{"name":"description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","2",{"property":"og:title","content":"Relasi dalam Perancangan Database | mukharomdev blog build with Markdown"}],["$","meta","3",{"property":"og:description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","4",{"property":"og:image","content":"http://localhost:3000/assets/blog/database/database.png"}],["$","meta","5",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","6",{"name":"twitter:title","content":"Relasi dalam Perancangan Database | mukharomdev blog build with Markdown"}],["$","meta","7",{"name":"twitter:description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","8",{"name":"twitter:image","content":"http://localhost:3000/assets/blog/database/database.png"}],["$","link","9",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
