1:"$Sreact.fragment"
2:I[7397,[],""]
3:I[8513,[],""]
5:I[3514,[],"OutletBoundary"]
8:I[3514,[],"ViewportBoundary"]
a:I[3514,[],"MetadataBoundary"]
c:I[1612,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/cc1b38a888361ae0.css","style"]
:HL["/_next/static/css/a218dfb468eefcdf.css","style"]
0:{"P":null,"b":"zB4SN0XwAB_SWMRVvwFhG","p":"","c":["","blog","react-usestate"],"i":false,"f":[[["",{"children":["blog",{"children":[["slug","react-usestate","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/cc1b38a888361ae0.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased ","children":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-100","children":["$","div",null,{"className":"container mx-auto p-4 bg-white rounded-lg shadow-lg","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"$undefined",[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","section",null,{"className":" prose lg:prose-3xl prose-img:rounded-xl prose-headings:underline prose-a:text-lime-600 prose-code:text-lime-500 mx-auto  ","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","react-usestate","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4","$undefined",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a218dfb468eefcdf.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L5",null,{"children":["$L6","$L7",null]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","iV35eWwHQaXaO34gOSDfU",{"children":[["$","$L8",null,{"children":"$L9"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],["$","$La",null,{"children":"$Lb"}]]}],false]],"m":"$undefined","G":["$c","$undefined"],"s":false,"S":true}
d:I[4184,["161","static/chunks/161-e1f62ef38275032d.js","953","static/chunks/app/blog/%5Bslug%5D/page-df444d222e09a7de.js"],""]
e:I[8161,["161","static/chunks/161-e1f62ef38275032d.js","953","static/chunks/app/blog/%5Bslug%5D/page-df444d222e09a7de.js"],"Image"]
f:T1646,<p>useState adalah salah satu <strong>React Hook</strong> yang digunakan untuk menambahkan dan mengelola <em>state</em> (data yang dapat berubah) di dalam komponen fungsi React. Berikut penjelasan lengkap dan contoh penggunaannya:</p>
<hr>
<h3><strong>1. Dasar Penggunaan useState</strong></h3>
<h4>Sintaks:</h4>
<pre><code class="language-javascript">const [state, setState] = useState(initialValue);
</code></pre>
<ul>
<li><strong>state</strong>: Nilai state saat ini.</li>
<li><strong>setState</strong>: Fungsi untuk memperbarui state.</li>
<li><strong>initialValue</strong>: Nilai awal state (bisa berupa string, number, array, object, dll).</li>
</ul>
<h4>Contoh Sederhana (Counter):</h4>
<pre><code class="language-jsx">import { useState } from 'react';

function Counter() {
  const [count, setCount] = useState(0); // Inisialisasi state dengan nilai 0

  return (
    &#x3C;div>
      &#x3C;p>Hitungan: {count}&#x3C;/p>
      &#x3C;button onClick={() => setCount(count + 1)}>Tambah&#x3C;/button>
      &#x3C;button onClick={() => setCount(count - 1)}>Kurang&#x3C;/button>
    &#x3C;/div>
  );
}
</code></pre>
<hr>
<h3><strong>2. Contoh Penggunaan Lain</strong></h3>
<h4>a. Form Input (Controlled Component):</h4>
<pre><code class="language-jsx">function Form() {
  const [name, setName] = useState('');

  return (
    &#x3C;div>
      &#x3C;input
        type="text"
        value={name}
        onChange={(e) => setName(e.target.value)} // Update state saat input berubah
        placeholder="Masukkan nama"
      />
      &#x3C;p>Nama Anda: {name}&#x3C;/p>
    &#x3C;/div>
  );
}
</code></pre>
<h4>b. State dengan Objek:</h4>
<pre><code class="language-jsx">function UserProfile() {
  const [user, setUser] = useState({
    name: 'John',
    age: 25,
    email: 'john@example.com'
  });

  const updateName = () => {
    // Salin nilai sebelumnya (...user) lalu update properti yang diinginkan
    setUser({ ...user, name: 'Jane' });
  };

  return (
    &#x3C;div>
      &#x3C;p>Nama: {user.name}&#x3C;/p>
      &#x3C;p>Umur: {user.age}&#x3C;/p>
      &#x3C;button onClick={updateName}>Ubah Nama ke Jane&#x3C;/button>
    &#x3C;/div>
  );
}
</code></pre>
<h4>c. State dengan Array:</h4>
<pre><code class="language-jsx">function TodoList() {
  const [todos, setTodos] = useState(['Belajar React', 'Makan Siang']);
  const [input, setInput] = useState('');

  const addTodo = () => {
    setTodos([...todos, input]); // Salin array lama dan tambah item baru
    setInput('');
  };

  return (
    &#x3C;div>
      &#x3C;input
        value={input}
        onChange={(e) => setInput(e.target.value)}
        placeholder="Tambahkan todo"
      />
      &#x3C;button onClick={addTodo}>Tambah&#x3C;/button>
      &#x3C;ul>
        {todos.map((todo, index) => (
          &#x3C;li key={index}>{todo}&#x3C;/li>
        ))}
      &#x3C;/ul>
    &#x3C;/div>
  );
}
</code></pre>
<hr>
<h3><strong>3. Aturan Penting</strong></h3>
<ol>
<li>
<p><strong>Jangan Mutasi State Langsung</strong>:</p>
<pre><code class="language-javascript">// ❌ Salah
user.name = 'Jane';
setUser(user);

// ✅ Benar
setUser({ ...user, name: 'Jane' });
</code></pre>
</li>
<li>
<p><strong>Gunakan Functional Update untuk State yang Bergantung pada Nilai Sebelumnya</strong>:</p>
<pre><code class="language-javascript">// ✅ Benar (untuk operasi seperti increment)
setCount((prevCount) => prevCount + 1);
</code></pre>
</li>
<li>
<p><strong>State di Inisialisasi Hanya Sekali</strong>:</p>
<pre><code class="language-javascript">// ✅ Jika inisialisasi memerlukan komputasi berat, gunakan fungsi:
const [data] = useState(() => heavyComputation());
</code></pre>
</li>
</ol>
<hr>
<h3><strong>4. Perbedaan useState vs useRef</strong></h3>
<div class="overflow-x-auto bg-lime-100"><table>
<thead>
<tr>
<th><strong>Kriteria</strong></th>
<th>useState</th>
<th>useRef</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Re-render</strong></td>
<td>Memicu re-render komponen</td>
<td>Tidak memicu re-render</td>
</tr>
<tr>
<td><strong>Penggunaan</strong></td>
<td>Untuk data yang memengaruhi UI</td>
<td>Untuk nilai yang tidak memengaruhi UI (seperti DOM, variabel persist)</td>
</tr>
<tr>
<td><strong>Nilai</strong></td>
<td>Immutable (diubah via setState)</td>
<td>Mutable (diubah via ref.current)</td>
</tr>
<tr>
<td><strong>Contoh Kasus</strong></td>
<td>Form input, toggle UI, data dinamis</td>
<td>Fokus input, simpan interval timer</td>
</tr>
</tbody>
</table></div>
<hr>
<h3><strong>5. Best Practices</strong></h3>
<ul>
<li>
<p><strong>Pecah State Kompleks</strong>: Jika state berupa objek/array, pertimbangkan untuk memisahkannya ke beberapa state.</p>
<pre><code class="language-javascript">// ❌ Kurang disarankan
const [user, setUser] = useState({ name: '', age: 0 });

// ✅ Lebih baik
const [name, setName] = useState('');
const [age, setAge] = useState(0);
</code></pre>
</li>
<li>
<p><strong>Hindari Penggunaan State untuk Data yang Tidak Di-render</strong> (gunakan useRef).</p>
</li>
</ul>
<hr>
<h3><strong>Kapan Menggunakan useState?</strong></h3>
<ul>
<li>Ketika data perlu <strong>di-render di UI</strong> (misal: form input, daftar data).</li>
<li>Ketika perubahan data harus <strong>memicu pembaruan tampilan</strong>.</li>
<li>Untuk logika yang memerlukan <strong>reaktivitas</strong> (perubahan data → perubahan UI).</li>
</ul>
<hr>
<h3>Contoh Lengkap: Toggle Komponen</h3>
<pre><code class="language-jsx">function Toggle() {
  const [isOn, setIsOn] = useState(false);

  return (
    &#x3C;div>
      &#x3C;button onClick={() => setIsOn(!isOn)}>
        {isOn ? 'Matikan' : 'Nyalakan'}
      &#x3C;/button>
      &#x3C;p>Status: {isOn ? 'Aktif' : 'Nonaktif'}&#x3C;/p>
    &#x3C;/div>
  );
}
</code></pre>
4:["$","main",null,{"className":"container","children":[["$","div",null,{"className":"border-b dark:bg-slate-800 bg-neutral-50 border-neutral-200","children":["$","div",null,{"className":" mx-auto px-5","children":["$","div",null,{"className":"py-2 text-center text-sm","children":["source code blog ini bisa ditemukan di link ini"," ",["$","a",null,{"href":"https://github.com/mukharomdev/mukharomdev.github.io","className":"underline hover:text-blue-600 duration-200 transition-colors","children":"available on GitHub"}],"."]}]}]}],["$","div",null,{"className":" mx-auto px-5","children":[["$","h2",null,{"className":"text-2xl md:text-4xl font-bold tracking-tight md:tracking-tighter leading-tight mb-20 mt-8 flex items-center","children":[["$","$Ld",null,{"href":"/","className":"hover:underline","children":"Blog"}],"."]}],["$","article",null,{"className":"mb-32","children":[[["$","h1",null,{"className":"text-3xl text-center md:text-5xl lg:text-6xl font-bold tracking-tighter leading-tight md:leading-none mb-12 text-center md:text-left","children":" Penggunaan React useState"}],["$","div",null,{"className":"hidden md:block md:mb-12","children":["$","div",null,{"className":"flex items-center","children":[["$","img",null,{"src":"/assets/blog/authors/mukharomdev.png","className":"w-12 h-12 rounded-full mr-4","alt":"mukharomdev"}],["$","div",null,{"className":"text-xl font-bold","children":"mukharomdev"}]]}]}],["$","div",null,{"className":"mb-8 md:mb-16 sm:mx-0","children":["$","div",null,{"className":"sm:mx-0","children":["$","$Le",null,{"src":"/assets/blog/reacts/react1.png","alt":"Cover Image for  Penggunaan React useState","className":"shadow-sm w-full sm:w-[400px] md:w-[600px] lg:w-[800px] max-h-[500px] mx-auto block","width":120,"height":80}]}]}],["$","div",null,{"className":"max-w-2xl mx-auto","children":[["$","div",null,{"className":"block md:hidden mb-6","children":["$","div",null,{"className":"flex items-center","children":[["$","img",null,{"src":"/assets/blog/authors/mukharomdev.png","className":"w-12 h-12 rounded-full mr-4","alt":"mukharomdev"}],["$","div",null,{"className":"text-xl font-bold","children":"mukharomdev"}]]}]}],["$","div",null,{"className":"mb-6 text-lg","children":["$","time",null,{"dateTime":"2025-02-26T05:35:07.322Z","children":"February\t26, 2025"}]}]]}]],["$","div",null,{"className":"max-w-2xl mx-auto","children":["$","div",null,{"className":"markdown-styles_markdown__ORfR8 prose prose-code ","dangerouslySetInnerHTML":{"__html":"$f"}}]}]]}]]}]]}]
9:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
6:null
7:null
b:[["$","title","0",{"children":" Penggunaan React useState | mukharomdev blog build with Markdown"}],["$","meta","1",{"name":"description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","2",{"property":"og:title","content":" Penggunaan React useState | mukharomdev blog build with Markdown"}],["$","meta","3",{"property":"og:description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","4",{"property":"og:image","content":"http://localhost:3000/assets/blog/reacts/react1.png"}],["$","meta","5",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","6",{"name":"twitter:title","content":" Penggunaan React useState | mukharomdev blog build with Markdown"}],["$","meta","7",{"name":"twitter:description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","8",{"name":"twitter:image","content":"http://localhost:3000/assets/blog/reacts/react1.png"}],["$","link","9",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
