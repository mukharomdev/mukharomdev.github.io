1:"$Sreact.fragment"
2:I[7397,[],""]
3:I[8513,[],""]
5:I[3514,[],"OutletBoundary"]
8:I[3514,[],"ViewportBoundary"]
a:I[3514,[],"MetadataBoundary"]
c:I[1612,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/cc1b38a888361ae0.css","style"]
:HL["/_next/static/css/a218dfb468eefcdf.css","style"]
0:{"P":null,"b":"zB4SN0XwAB_SWMRVvwFhG","p":"","c":["","blog","react-uselayouteffect"],"i":false,"f":[[["",{"children":["blog",{"children":[["slug","react-uselayouteffect","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/cc1b38a888361ae0.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased ","children":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-100","children":["$","div",null,{"className":"container mx-auto p-4 bg-white rounded-lg shadow-lg","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"$undefined",[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","section",null,{"className":" prose lg:prose-3xl prose-img:rounded-xl prose-headings:underline prose-a:text-lime-600 prose-code:text-lime-500 mx-auto  ","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","react-uselayouteffect","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4","$undefined",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a218dfb468eefcdf.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L5",null,{"children":["$L6","$L7",null]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","yTxepyGysNAkQhikFnTAA",{"children":[["$","$L8",null,{"children":"$L9"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],["$","$La",null,{"children":"$Lb"}]]}],false]],"m":"$undefined","G":["$c","$undefined"],"s":false,"S":true}
d:I[4184,["161","static/chunks/161-e1f62ef38275032d.js","953","static/chunks/app/blog/%5Bslug%5D/page-df444d222e09a7de.js"],""]
e:I[8161,["161","static/chunks/161-e1f62ef38275032d.js","953","static/chunks/app/blog/%5Bslug%5D/page-df444d222e09a7de.js"],"Image"]
f:T1716,<p>useLayoutEffect adalah hook di React yang mirip dengan useEffect, tetapi dijalankan <strong>secara sinkron setelah React melakukan mutasi DOM dan sebelum browser melakukan painting</strong>. Ini berguna ketika Anda perlu membaca atau memodifikasi layout DOM secara sinkron sebelum browser menampilkan perubahan ke layar. Berikut penjelasan lengkapnya:</p>
<hr>
<h3><strong>1. Sintaks Dasar</strong></h3>
<pre><code class="language-javascript">useLayoutEffect(() => {
  // Kode efek samping di sini
  return () => {
    // Cleanup (opsional)
  };
}, [dependencies]); // Dependency array
</code></pre>
<hr>
<h3><strong>2. Perbedaan useLayoutEffect vs useEffect</strong></h3>
<div class="overflow-x-auto bg-lime-100"><table>
<thead>
<tr>
<th><strong>Kriteria</strong></th>
<th>useLayoutEffect</th>
<th>useEffect</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Waktu Eksekusi</strong></td>
<td>Setelah mutasi DOM, <strong>sebelum browser paint</strong></td>
<td>Setelah mutasi DOM, <strong>setelah browser paint</strong></td>
</tr>
<tr>
<td><strong>Penggunaan</strong></td>
<td>Untuk operasi yang memengaruhi tampilan (misal: ukuran/posisi DOM)</td>
<td>Untuk efek samping umum (fetch data, subscriptions)</td>
</tr>
<tr>
<td><strong>Blokir Paint</strong></td>
<td>Ya (jika kode berat)</td>
<td>Tidak</td>
</tr>
<tr>
<td><strong>SSR</strong></td>
<td>Tidak direkomendasikan (menyebabkan peringatan)</td>
<td>Aman di SSR</td>
</tr>
</tbody>
</table></div>
<hr>
<h3><strong>3. Kapan Menggunakan useLayoutEffect?</strong></h3>
<ul>
<li><strong>Membaca/mengukur DOM</strong> (misal: ukuran elemen, posisi scroll).</li>
<li><strong>Memodifikasi DOM secara sinkron</strong> untuk menghindari "flicker" atau perubahan visual yang terlihat pengguna.</li>
<li><strong>Animasi atau transisi</strong> yang memerlukan pembaruan DOM sebelum paint.</li>
</ul>
<hr>
<h3><strong>4. Contoh Penggunaan</strong></h3>
<h4>a. <strong>Mengukur Ukuran Elemen</strong></h4>
<pre><code class="language-jsx">import { useLayoutEffect, useRef, useState } from 'react';

function MeasureElement() {
  const ref = useRef();
  const [size, setSize] = useState({ width: 0, height: 0 });

  useLayoutEffect(() => {
    // Ukur elemen setelah DOM diupdate
    const { width, height } = ref.current.getBoundingClientRect();
    setSize({ width, height });
  }, []); // Jalankan sekali saat mount

  return (
    &#x3C;div>
      &#x3C;div ref={ref} style={{ border: '1px solid red' }}>
        Ukuran: {size.width}x{size.height}
      &#x3C;/div>
    &#x3C;/div>
  );
}
</code></pre>
<h4>b. <strong>Menyesuaikan Posisi Tooltip</strong></h4>
<pre><code class="language-jsx">function Tooltip({ text }) {
  const tooltipRef = useRef();
  const [position, setPosition] = useState({ top: 0, left: 0 });

  useLayoutEffect(() => {
    // Hitung posisi tooltip relatif terhadap parent
    const parentRect = tooltipRef.current.parentElement.getBoundingClientRect();
    const newPosition = {
      top: parentRect.top - 30,
      left: parentRect.left + parentRect.width / 2,
    };
    setPosition(newPosition);
  }, [text]); // Jalankan ulang saat &#x3C;code>text&#x3C;/code> berubah

  return (
    &#x3C;div
      ref={tooltipRef}
      style={{
        position: 'fixed',
        top: position.top,
        left: position.left,
      }}
    >
      {text}
    &#x3C;/div>
  );
}
</code></pre>
<h4>c. <strong>Auto-Scroll ke Bawah List</strong></h4>
<pre><code class="language-jsx">function ChatList({ messages }) {
  const listRef = useRef();

  useLayoutEffect(() => {
    // Auto-scroll ke bawah saat pesan baru ditambahkan
    listRef.current.scrollTop = listRef.current.scrollHeight;
  }, [messages]);

  return (
    &#x3C;div ref={listRef} style={{ height: '300px', overflowY: 'auto' }}>
      {messages.map((msg) => (
        &#x3C;div key={msg.id}>{msg.text}&#x3C;/div>
      ))}
    &#x3C;/div>
  );
}
</code></pre>
<hr>
<h3><strong>5. Peringatan Penting</strong></h3>
<ol>
<li>
<p><strong>Hindari Kode Berat di useLayoutEffect</strong><br>
Karena dijalankan sebelum browser paint, kode yang lambat akan memblokir tampilan visual hingga selesai.<br>
Contoh buruk:</p>
<pre><code class="language-javascript">useLayoutEffect(() => {
  // Kode berat (misal: loop ribuan iterasi)
  for (let i = 0; i &#x3C; 100000; i++) { /* ... */ }
}, []);
</code></pre>
</li>
<li>
<p><strong>Masalah dengan Server-Side Rendering (SSR)</strong><br>
useLayoutEffect tidak bekerja di server. Jika digunakan di SSR, React akan memberi peringatan.<br>
Solusi:</p>
<ul>
<li>Gunakan useEffect untuk SSR.</li>
<li>Atau, jalankan kode hanya di client dengan:
<pre><code class="language-javascript">useLayoutEffect(() => {
  if (typeof window !== 'undefined') {
    // Kode khusus client
  }
}, []);
</code></pre>
</li>
</ul>
</li>
</ol>
<hr>
<h3><strong>6. Best Practices</strong></h3>
<ul>
<li>
<p><strong>Gunakan useEffect Sebagai Default</strong><br>
Beralih ke useLayoutEffect hanya jika ada masalah visual yang perlu diatasi secara sinkron.</p>
</li>
<li>
<p><strong>Optimasi Operasi DOM</strong><br>
Pastikan operasi di useLayoutEffect cepat dan tidak menghambat paint.</p>
</li>
<li>
<p><strong>Hindari State Update di useLayoutEffect</strong><br>
Jika memungkinkan, gunakan untuk operasi DOM langsung, bukan update state yang memicu re-render.</p>
</li>
</ul>
<hr>
<h3><strong>Kapan Memilih useLayoutEffect?</strong></h3>
<ul>
<li>Saat Anda perlu <strong>membaca atau menulis DOM secara sinkron</strong> sebelum browser paint (misal: menghitung posisi tooltip).</li>
<li>Untuk <strong>menghindari flicker</strong> saat perubahan DOM harus langsung terlihat (misal: animasi transisi).</li>
</ul>
<hr>
<h3><strong>Kesimpulan</strong></h3>
<p>useLayoutEffect adalah alat yang powerful untuk kasus khusus di mana pembaruan DOM harus terjadi <strong>sebelum browser paint</strong>. Gunakan dengan bijak untuk menghindari masalah performa dan kompatibilitas! 🚨</p>
4:["$","main",null,{"className":"container","children":[["$","div",null,{"className":"border-b dark:bg-slate-800 bg-neutral-50 border-neutral-200","children":["$","div",null,{"className":" mx-auto px-5","children":["$","div",null,{"className":"py-2 text-center text-sm","children":["source code blog ini bisa ditemukan di link ini"," ",["$","a",null,{"href":"https://github.com/mukharomdev/mukharomdev.github.io","className":"underline hover:text-blue-600 duration-200 transition-colors","children":"available on GitHub"}],"."]}]}]}],["$","div",null,{"className":" mx-auto px-5","children":[["$","h2",null,{"className":"text-2xl md:text-4xl font-bold tracking-tight md:tracking-tighter leading-tight mb-20 mt-8 flex items-center","children":[["$","$Ld",null,{"href":"/","className":"hover:underline","children":"Blog"}],"."]}],["$","article",null,{"className":"mb-32","children":[[["$","h1",null,{"className":"text-3xl text-center md:text-5xl lg:text-6xl font-bold tracking-tighter leading-tight md:leading-none mb-12 text-center md:text-left","children":" Penggunaan React useLayoutEffect."}],["$","div",null,{"className":"hidden md:block md:mb-12","children":["$","div",null,{"className":"flex items-center","children":[["$","img",null,{"src":"/assets/blog/authors/mukharomdev.png","className":"w-12 h-12 rounded-full mr-4","alt":"mukharomdev"}],["$","div",null,{"className":"text-xl font-bold","children":"mukharomdev"}]]}]}],["$","div",null,{"className":"mb-8 md:mb-16 sm:mx-0","children":["$","div",null,{"className":"sm:mx-0","children":["$","$Le",null,{"src":"/assets/blog/reacts/react1.png","alt":"Cover Image for  Penggunaan React useLayoutEffect.","className":"shadow-sm w-full sm:w-[400px] md:w-[600px] lg:w-[800px] max-h-[500px] mx-auto block","width":120,"height":80}]}]}],["$","div",null,{"className":"max-w-2xl mx-auto","children":[["$","div",null,{"className":"block md:hidden mb-6","children":["$","div",null,{"className":"flex items-center","children":[["$","img",null,{"src":"/assets/blog/authors/mukharomdev.png","className":"w-12 h-12 rounded-full mr-4","alt":"mukharomdev"}],["$","div",null,{"className":"text-xl font-bold","children":"mukharomdev"}]]}]}],["$","div",null,{"className":"mb-6 text-lg","children":["$","time",null,{"dateTime":"2025-03-01T08:14:47.924Z","children":"March\t1, 2025"}]}]]}]],["$","div",null,{"className":"max-w-2xl mx-auto","children":["$","div",null,{"className":"markdown-styles_markdown__ORfR8 prose prose-code ","dangerouslySetInnerHTML":{"__html":"$f"}}]}]]}]]}]]}]
9:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
6:null
7:null
b:[["$","title","0",{"children":" Penggunaan React useLayoutEffect. | mukharomdev blog build with Markdown"}],["$","meta","1",{"name":"description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","2",{"property":"og:title","content":" Penggunaan React useLayoutEffect. | mukharomdev blog build with Markdown"}],["$","meta","3",{"property":"og:description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","4",{"property":"og:image","content":"http://localhost:3000/assets/blog/reacts/react1.png"}],["$","meta","5",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","6",{"name":"twitter:title","content":" Penggunaan React useLayoutEffect. | mukharomdev blog build with Markdown"}],["$","meta","7",{"name":"twitter:description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","8",{"name":"twitter:image","content":"http://localhost:3000/assets/blog/reacts/react1.png"}],["$","link","9",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
