1:"$Sreact.fragment"
2:I[7397,[],""]
3:I[8513,[],""]
5:I[3514,[],"OutletBoundary"]
8:I[3514,[],"ViewportBoundary"]
a:I[3514,[],"MetadataBoundary"]
c:I[1612,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/cc1b38a888361ae0.css","style"]
:HL["/_next/static/css/a218dfb468eefcdf.css","style"]
0:{"P":null,"b":"zB4SN0XwAB_SWMRVvwFhG","p":"","c":["","blog","react-usetransition"],"i":false,"f":[[["",{"children":["blog",{"children":[["slug","react-usetransition","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/cc1b38a888361ae0.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased ","children":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-100","children":["$","div",null,{"className":"container mx-auto p-4 bg-white rounded-lg shadow-lg","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"$undefined",[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","section",null,{"className":" prose lg:prose-3xl prose-img:rounded-xl prose-headings:underline prose-a:text-lime-600 prose-code:text-lime-500 mx-auto  ","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","react-usetransition","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4","$undefined",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a218dfb468eefcdf.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L5",null,{"children":["$L6","$L7",null]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","RpNn-xkcEG6bnGUST4Skp",{"children":[["$","$L8",null,{"children":"$L9"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],["$","$La",null,{"children":"$Lb"}]]}],false]],"m":"$undefined","G":["$c","$undefined"],"s":false,"S":true}
d:I[4184,["161","static/chunks/161-e1f62ef38275032d.js","953","static/chunks/app/blog/%5Bslug%5D/page-df444d222e09a7de.js"],""]
e:I[8161,["161","static/chunks/161-e1f62ef38275032d.js","953","static/chunks/app/blog/%5Bslug%5D/page-df444d222e09a7de.js"],"Image"]
f:T1690,<p>useTransition adalah hook di React yang digunakan untuk <strong>mengontrol prioritas pembaruan state</strong> sehingga pembaruan yang tidak urgent (seperti render data besar atau navigasi halaman) tidak memblokir interaksi pengguna. Hook ini memungkinkan Anda menandai pembaruan state sebagai "transisi" yang bisa ditunda, sehingga UI tetap responsif.</p>
<hr>
<h3><strong>Kapan Menggunakan useTransition?</strong></h3>
<ol>
<li><strong>Navigasi antar halaman/komponen</strong> yang memuat data berat.</li>
<li><strong>Filter/operasi pencarian</strong> yang memicu render besar.</li>
<li><strong>Mengoptimalkan responsivitas UI</strong> saat pengguna melakukan interaksi (klik, input).</li>
<li><strong>Mencegah "lag"</strong> saat pembaruan state memakan waktu lama.</li>
</ol>
<hr>
<h3><strong>Sintaks Dasar</strong></h3>
<pre><code class="language-javascript">const [isPending, startTransition] = useTransition();
</code></pre>
<ul>
<li><strong>isPending</strong>: Boolean yang menandakan apakah transisi sedang berlangsung.</li>
<li><strong>startTransition</strong>: Fungsi untuk membungkus pembaruan state yang bisa ditunda.</li>
</ul>
<hr>
<h3><strong>Contoh Penggunaan</strong></h3>
<h4>1. <strong>Navigasi Tab dengan Konten Berat</strong></h4>
<pre><code class="language-jsx">import { useState, useTransition } from 'react';

function TabContainer() {
  const [tab, setTab] = useState('home');
  const [isPending, startTransition] = useTransition();

  // Simulasi komponen berat
  const HeavyTabContent = ({ tab }) => {
    // Render 10.000 item (simulasi operasi berat)
    const items = Array(10000).fill(null).map((_, i) => &#x3C;div key={i}>Item {i} ({tab})&#x3C;/div>);
    return &#x3C;div>{items}&#x3C;/div>;
  };

  const selectTab = (nextTab) => {
    // Tandai pembaruan state sebagai transisi
    startTransition(() => {
      setTab(nextTab);
    });
  };

  return (
    &#x3C;div>
      &#x3C;button onClick={() => selectTab('home')}>Home&#x3C;/button>
      &#x3C;button onClick={() => selectTab('profile')}>Profile&#x3C;/button>
      
      {/* Tampilkan indikator loading saat transisi */}
      {isPending ? &#x3C;div>Loading...&#x3C;/div> : null}
      
      &#x3C;HeavyTabContent tab={tab} />
    &#x3C;/div>
  );
}
</code></pre>
<h4>2. <strong>Input Pencarian dengan Hasil Ditunda</strong></h4>
<pre><code class="language-jsx">function SearchBox() {
  const [query, setQuery] = useState('');
  const [results, setResults] = useState([]);
  const [isPending, startTransition] = useTransition();

  const handleSearch = (e) => {
    const value = e.target.value;
    setQuery(value); // Update langsung (urgent)

    // Tunda pembaruan hasil pencarian (non-urgent)
    startTransition(() => {
      fetchResults(value).then(data => setResults(data));
    });
  };

  return (
    &#x3C;div>
      &#x3C;input type="text" value={query} onChange={handleSearch} />
      {isPending ? &#x3C;div>Mencari...&#x3C;/div> : &#x3C;SearchResults data={results} />}
    &#x3C;/div>
  );
}
</code></pre>
<hr>
<h3><strong>Perbedaan useTransition vs useDeferredValue</strong></h3>
<div class="overflow-x-auto bg-lime-100"><table>
<thead>
<tr>
<th><strong>Kriteria</strong></th>
<th>useTransition</th>
<th>useDeferredValue</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Fokus</strong></td>
<td>Mengontrol prioritas state update</td>
<td>Menunda nilai untuk render</td>
</tr>
<tr>
<td><strong>Penggunaan</strong></td>
<td>Saat memicu pembaruan state</td>
<td>Saat membaca nilai yang diubah</td>
</tr>
<tr>
<td><strong>Indikator Pending</strong></td>
<td>Menyediakan isPending</td>
<td>Tidak ada indikator langsung</td>
</tr>
<tr>
<td><strong>Contoh Kasus</strong></td>
<td>Navigasi, submit form</td>
<td>Input pencarian, filter data</td>
</tr>
</tbody>
</table></div>
<hr>
<h3><strong>Best Practices</strong></h3>
<ol>
<li>
<p><strong>Bagi State Menjadi Urgent dan Non-Urgent</strong></p>
<pre><code class="language-jsx">// State urgent (contoh: input)
const [query, setQuery] = useState('');

// State non-urgent (contoh: hasil pencarian)
const [results, setResults] = useState([]);
const [isPending, startTransition] = useTransition();
</code></pre>
</li>
<li>
<p><strong>Gunakan untuk Operasi yang Memblock Render</strong><br>
Contoh:</p>
<ul>
<li>Fetching data besar.</li>
<li>Render daftar kompleks.</li>
</ul>
</li>
<li>
<p><strong>Hindari untuk Pembaruan yang Harus Instan</strong><br>
Misal:</p>
<ul>
<li>Animasi.</li>
<li>Input teks (kecuali untuk hasil yang ditunda).</li>
</ul>
</li>
<li>
<p><strong>Kombinasikan dengan Suspense</strong><br>
Untuk menampilkan fallback UI selama transisi:</p>
<pre><code class="language-jsx">&#x3C;Suspense fallback={&#x3C;Spinner />}>
  &#x3C;HeavyComponent />
&#x3C;/Suspense>
</code></pre>
</li>
</ol>
<hr>
<h3><strong>Catatan Penting</strong></h3>
<ul>
<li><strong>Hanya untuk State Updates</strong>: startTransition hanya membungkus pembaruan state.</li>
<li><strong>Tidak untuk Event Handler Async</strong>: Gunakan startTransition di dalam event handler, bukan untuk logika async langsung:
<pre><code class="language-jsx">// ❌ Salah
startTransition(async () => {
  const data = await fetchData();
  setData(data);
});

// ✅ Benar
startTransition(() => {
  fetchData().then(data => setData(data));
});
</code></pre>
</li>
</ul>
<hr>
<h3><strong>Kesimpulan</strong></h3>
<p>useTransition adalah solusi untuk:</p>
<ul>
<li><strong>Meningkatkan responsivitas UI</strong> dengan memprioritaskan pembaruan penting.</li>
<li><strong>Mengelola operasi berat</strong> tanpa mengganggu interaksi pengguna.</li>
<li><strong>Memberi feedback visual</strong> (melalui isPending) saat transisi berlangsung.</li>
</ul>
<p>Gunakan ketika Anda perlu <strong>menyeimbangkan kinerja dan pengalaman pengguna</strong>! 🚀</p>
4:["$","main",null,{"className":"container","children":[["$","div",null,{"className":"border-b dark:bg-slate-800 bg-neutral-50 border-neutral-200","children":["$","div",null,{"className":" mx-auto px-5","children":["$","div",null,{"className":"py-2 text-center text-sm","children":["source code blog ini bisa ditemukan di link ini"," ",["$","a",null,{"href":"https://github.com/mukharomdev/mukharomdev.github.io","className":"underline hover:text-blue-600 duration-200 transition-colors","children":"available on GitHub"}],"."]}]}]}],["$","div",null,{"className":" mx-auto px-5","children":[["$","h2",null,{"className":"text-2xl md:text-4xl font-bold tracking-tight md:tracking-tighter leading-tight mb-20 mt-8 flex items-center","children":[["$","$Ld",null,{"href":"/","className":"hover:underline","children":"Blog"}],"."]}],["$","article",null,{"className":"mb-32","children":[[["$","h1",null,{"className":"text-3xl text-center md:text-5xl lg:text-6xl font-bold tracking-tighter leading-tight md:leading-none mb-12 text-center md:text-left","children":" Penggunaan React useTransition"}],["$","div",null,{"className":"hidden md:block md:mb-12","children":["$","div",null,{"className":"flex items-center","children":[["$","img",null,{"src":"/assets/blog/authors/mukharomdev.png","className":"w-12 h-12 rounded-full mr-4","alt":"mukharomdev"}],["$","div",null,{"className":"text-xl font-bold","children":"mukharomdev"}]]}]}],["$","div",null,{"className":"mb-8 md:mb-16 sm:mx-0","children":["$","div",null,{"className":"sm:mx-0","children":["$","$Le",null,{"src":"/assets/blog/reacts/react1.png","alt":"Cover Image for  Penggunaan React useTransition","className":"shadow-sm w-full sm:w-[400px] md:w-[600px] lg:w-[800px] max-h-[500px] mx-auto block","width":120,"height":80}]}]}],["$","div",null,{"className":"max-w-2xl mx-auto","children":[["$","div",null,{"className":"block md:hidden mb-6","children":["$","div",null,{"className":"flex items-center","children":[["$","img",null,{"src":"/assets/blog/authors/mukharomdev.png","className":"w-12 h-12 rounded-full mr-4","alt":"mukharomdev"}],["$","div",null,{"className":"text-xl font-bold","children":"mukharomdev"}]]}]}],["$","div",null,{"className":"mb-6 text-lg","children":["$","time",null,{"dateTime":"2025-03-01T14:20:12.933Z","children":"March\t1, 2025"}]}]]}]],["$","div",null,{"className":"max-w-2xl mx-auto","children":["$","div",null,{"className":"markdown-styles_markdown__ORfR8 prose prose-code ","dangerouslySetInnerHTML":{"__html":"$f"}}]}]]}]]}]]}]
9:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
6:null
7:null
b:[["$","title","0",{"children":" Penggunaan React useTransition | mukharomdev blog build with Markdown"}],["$","meta","1",{"name":"description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","2",{"property":"og:title","content":" Penggunaan React useTransition | mukharomdev blog build with Markdown"}],["$","meta","3",{"property":"og:description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","4",{"property":"og:image","content":"http://localhost:3000/assets/blog/reacts/react1.png"}],["$","meta","5",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","6",{"name":"twitter:title","content":" Penggunaan React useTransition | mukharomdev blog build with Markdown"}],["$","meta","7",{"name":"twitter:description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","8",{"name":"twitter:image","content":"http://localhost:3000/assets/blog/reacts/react1.png"}],["$","link","9",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
