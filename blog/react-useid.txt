1:"$Sreact.fragment"
2:I[7397,[],""]
3:I[8513,[],""]
5:I[3514,[],"OutletBoundary"]
8:I[3514,[],"ViewportBoundary"]
a:I[3514,[],"MetadataBoundary"]
c:I[1612,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/cc1b38a888361ae0.css","style"]
:HL["/_next/static/css/a218dfb468eefcdf.css","style"]
0:{"P":null,"b":"zB4SN0XwAB_SWMRVvwFhG","p":"","c":["","blog","react-useid"],"i":false,"f":[[["",{"children":["blog",{"children":[["slug","react-useid","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/cc1b38a888361ae0.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased ","children":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-100","children":["$","div",null,{"className":"container mx-auto p-4 bg-white rounded-lg shadow-lg","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"$undefined",[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","section",null,{"className":" prose lg:prose-3xl prose-img:rounded-xl prose-headings:underline prose-a:text-lime-600 prose-code:text-lime-500 mx-auto  ","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","react-useid","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4","$undefined",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a218dfb468eefcdf.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L5",null,{"children":["$L6","$L7",null]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","_E4MNbbhnAhq0a_fhJLMm",{"children":[["$","$L8",null,{"children":"$L9"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],["$","$La",null,{"children":"$Lb"}]]}],false]],"m":"$undefined","G":["$c","$undefined"],"s":false,"S":true}
d:I[4184,["161","static/chunks/161-e1f62ef38275032d.js","953","static/chunks/app/blog/%5Bslug%5D/page-df444d222e09a7de.js"],""]
e:I[8161,["161","static/chunks/161-e1f62ef38275032d.js","953","static/chunks/app/blog/%5Bslug%5D/page-df444d222e09a7de.js"],"Image"]
f:T16c1,<p>useId adalah hook di React yang digunakan untuk <strong>menghasilkan ID unik yang stabil</strong> baik di sisi klien (client-side) maupun server (server-side). Hook ini terutama berguna untuk menghindari masalah <em>hydration mismatch</em> saat menggunakan Server-Side Rendering (SSR) dan untuk keperluan aksesibilitas seperti menghubungkan label dengan input menggunakan atribut htmlFor dan id.</p>
<hr>
<h3><strong>Kapan Menggunakan useId?</strong></h3>
<ol>
<li><strong>Aksesibilitas</strong>: Mengaitkan  dengan  menggunakan htmlFor dan id.</li>
<li><strong>Komponen yang Dirender di Server (SSR)</strong>: Menghindari perbedaan ID antara server dan klien.</li>
<li><strong>Elemen yang Membutuhkan ID Unik</strong>: Seperti elemen ARIA (aria-labelledby, aria-describedby) atau komponen kustom.</li>
</ol>
<hr>
<h3><strong>Sintaks Dasar</strong></h3>
<pre><code class="language-javascript">const id = useId();
</code></pre>
<hr>
<h3><strong>Contoh Penggunaan</strong></h3>
<h4>1. <strong>Label dan Input</strong></h4>
<pre><code class="language-jsx">import { useId } from 'react';

function InputField() {
  const id = useId();

  return (
    &#x3C;div>
      &#x3C;label htmlFor={id}>Nama:&#x3C;/label>
      &#x3C;input type="text" id={id} />
    &#x3C;/div>
  );
}
</code></pre>
<h4>2. <strong>Komponen dengan Beberapa ID</strong></h4>
<pre><code class="language-jsx">function LoginForm() {
  const emailId = useId();
  const passwordId = useId();

  return (
    &#x3C;form>
      &#x3C;div>
        &#x3C;label htmlFor={emailId}>Email:&#x3C;/label>
        &#x3C;input type="email" id={emailId} />
      &#x3C;/div>
      &#x3C;div>
        &#x3C;label htmlFor={passwordId}>Password:&#x3C;/label>
        &#x3C;input type="password" id={passwordId} />
      &#x3C;/div>
    &#x3C;/form>
  );
}
</code></pre>
<h4>3. <strong>Kompleks dengan Suffix/Prefix</strong></h4>
<pre><code class="language-jsx">function Accordion() {
  const id = useId();

  return (
    &#x3C;div>
      &#x3C;button aria-controls={&#x3C;code>${id}-panel&#x3C;/code>} id={&#x3C;code>${id}-button&#x3C;/code>}>
        Toggle Panel
      &#x3C;/button>
      &#x3C;div id={&#x3C;code>${id}-panel&#x3C;/code>} aria-labelledby={&#x3C;code>${id}-button&#x3C;/code>}>
        Konten panel...
      &#x3C;/div>
    &#x3C;/div>
  );
}
</code></pre>
<hr>
<h3><strong>Mengapa Tidak Boleh Menggunakan Math.random() atau Counter?</strong></h3>
<ul>
<li><strong>Math.random()</strong>: Menghasilkan ID berbeda setiap render → menyebabkan <em>hydration mismatch</em> di SSR.</li>
<li><strong>Counter</strong>: ID tidak unik antar komponen atau sesi.</li>
<li><strong>useId</strong>: Menjamin ID stabil dan unik di seluruh komponen, baik di server maupun klien.</li>
</ul>
<hr>
<h3><strong>Aturan Penting</strong></h3>
<ol>
<li>
<p><strong>Jangan Gunakan untuk Key dalam List</strong><br>
useId tidak dirancang untuk key di list. Gunakan ID dari data atau hash unik.</p>
<pre><code class="language-jsx">// ❌ Salah
{items.map((item) => (
  &#x3C;div key={useId()}>{item}&#x3C;/div>
))}

// ✅ Benar
{items.map((item) => (
  &#x3C;div key={item.id}>{item.name}&#x3C;/div>
))}
</code></pre>
</li>
<li>
<p><strong>Hanya untuk ID yang Terkait dengan HTML</strong><br>
Jangan gunakan untuk keperluan lain seperti CSS-in-JS atau ID kustom untuk logika bisnis.</p>
</li>
</ol>
<hr>
<h3><strong>Perbandingan dengan Cara Lain</strong></h3>
<div class="overflow-x-auto bg-lime-100"><table>
<thead>
<tr>
<th><strong>Metode</strong></th>
<th><strong>Masalah</strong></th>
<th><strong>Solusi useId</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>Math.random()</td>
<td>ID berbeda setiap render</td>
<td>ID stabil antar server dan klien</td>
</tr>
<tr>
<td>crypto.randomUUID()</td>
<td>Tidak bekerja di SSR</td>
<td>Mendukung SSR</td>
</tr>
<tr>
<td>Manual counter</td>
<td>ID tidak unik antar komponen</td>
<td>ID unik global</td>
</tr>
</tbody>
</table></div>
<hr>
<h3><strong>Best Practices</strong></h3>
<ul>
<li><strong>Gunakan untuk Aksesibilitas</strong>: Pastikan atribut id dan htmlFor selalu terhubung.</li>
<li><strong>Hindari Concatenasi Manual</strong>: Jika membutuhkan beberapa ID dalam satu komponen, gunakan suffix/prefix:
<pre><code class="language-jsx">const id = useId();
const inputId = &#x3C;code>${id}-input&#x3C;/code>;
const labelId = &#x3C;code>${id}-label&#x3C;/code>;
</code></pre>
</li>
<li><strong>SSR/Next.js</strong>: Tidak perlu konfigurasi khusus. useId otomatis bekerja dengan baik.</li>
</ul>
<hr>
<h3><strong>Contoh Lengkap: Form dengan Validasi</strong></h3>
<pre><code class="language-jsx">function SignupForm() {
  const emailId = useId();
  const passwordId = useId();
  const [error, setError] = useState('');

  const handleSubmit = (e) => {
    e.preventDefault();
    const email = e.target.elements[emailId].value;
    if (!email.includes('@')) {
      setError('Email tidak valid');
    }
  };

  return (
    &#x3C;form onSubmit={handleSubmit}>
      &#x3C;div>
        &#x3C;label htmlFor={emailId}>Email:&#x3C;/label>
        &#x3C;input type="email" id={emailId} />
      &#x3C;/div>
      &#x3C;div>
        &#x3C;label htmlFor={passwordId}>Password:&#x3C;/label>
        &#x3C;input type="password" id={passwordId} />
      &#x3C;/div>
      {error &#x26;&#x26; &#x3C;p role="alert">{error}&#x3C;/p>}
      &#x3C;button type="submit">Daftar&#x3C;/button>
    &#x3C;/form>
  );
}
</code></pre>
<hr>
<h3><strong>Kesimpulan</strong></h3>
<p>useId adalah solusi React untuk:</p>
<ul>
<li>Menghasilkan <strong>ID unik yang stabil</strong> di server dan klien.</li>
<li>Mencegah masalah <strong>hydration mismatch</strong> di SSR.</li>
<li>Meningkatkan <strong>aksesibilitas</strong> dengan menghubungkan elemen HTML.</li>
</ul>
<p>Gunakan hook ini untuk semua kebutuhan ID yang terkait dengan markup HTML! 🛠️</p>
4:["$","main",null,{"className":"container","children":[["$","div",null,{"className":"border-b dark:bg-slate-800 bg-neutral-50 border-neutral-200","children":["$","div",null,{"className":" mx-auto px-5","children":["$","div",null,{"className":"py-2 text-center text-sm","children":["source code blog ini bisa ditemukan di link ini"," ",["$","a",null,{"href":"https://github.com/mukharomdev/mukharomdev.github.io","className":"underline hover:text-blue-600 duration-200 transition-colors","children":"available on GitHub"}],"."]}]}]}],["$","div",null,{"className":" mx-auto px-5","children":[["$","h2",null,{"className":"text-2xl md:text-4xl font-bold tracking-tight md:tracking-tighter leading-tight mb-20 mt-8 flex items-center","children":[["$","$Ld",null,{"href":"/","className":"hover:underline","children":"Blog"}],"."]}],["$","article",null,{"className":"mb-32","children":[[["$","h1",null,{"className":"text-3xl text-center md:text-5xl lg:text-6xl font-bold tracking-tighter leading-tight md:leading-none mb-12 text-center md:text-left","children":" Penggunaan React useId"}],["$","div",null,{"className":"hidden md:block md:mb-12","children":["$","div",null,{"className":"flex items-center","children":[["$","img",null,{"src":"/assets/blog/authors/mukharomdev.png","className":"w-12 h-12 rounded-full mr-4","alt":"mukharomdev"}],["$","div",null,{"className":"text-xl font-bold","children":"mukharomdev"}]]}]}],["$","div",null,{"className":"mb-8 md:mb-16 sm:mx-0","children":["$","div",null,{"className":"sm:mx-0","children":["$","$Le",null,{"src":"/assets/blog/reacts/react1.png","alt":"Cover Image for  Penggunaan React useId","className":"shadow-sm w-full sm:w-[400px] md:w-[600px] lg:w-[800px] max-h-[500px] mx-auto block","width":120,"height":80}]}]}],["$","div",null,{"className":"max-w-2xl mx-auto","children":[["$","div",null,{"className":"block md:hidden mb-6","children":["$","div",null,{"className":"flex items-center","children":[["$","img",null,{"src":"/assets/blog/authors/mukharomdev.png","className":"w-12 h-12 rounded-full mr-4","alt":"mukharomdev"}],["$","div",null,{"className":"text-xl font-bold","children":"mukharomdev"}]]}]}],["$","div",null,{"className":"mb-6 text-lg","children":["$","time",null,{"dateTime":"2025-03-01T14:52:04.709Z","children":"March\t1, 2025"}]}]]}]],["$","div",null,{"className":"max-w-2xl mx-auto","children":["$","div",null,{"className":"markdown-styles_markdown__ORfR8 prose prose-code ","dangerouslySetInnerHTML":{"__html":"$f"}}]}]]}]]}]]}]
9:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
6:null
7:null
b:[["$","title","0",{"children":" Penggunaan React useId | mukharomdev blog build with Markdown"}],["$","meta","1",{"name":"description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","2",{"property":"og:title","content":" Penggunaan React useId | mukharomdev blog build with Markdown"}],["$","meta","3",{"property":"og:description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","4",{"property":"og:image","content":"http://localhost:3000/assets/blog/reacts/react1.png"}],["$","meta","5",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","6",{"name":"twitter:title","content":" Penggunaan React useId | mukharomdev blog build with Markdown"}],["$","meta","7",{"name":"twitter:description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","8",{"name":"twitter:image","content":"http://localhost:3000/assets/blog/reacts/react1.png"}],["$","link","9",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
