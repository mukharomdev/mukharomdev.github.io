1:"$Sreact.fragment"
2:I[7397,[],""]
3:I[8513,[],""]
5:I[3514,[],"OutletBoundary"]
8:I[3514,[],"ViewportBoundary"]
a:I[3514,[],"MetadataBoundary"]
c:I[1612,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/cc1b38a888361ae0.css","style"]
:HL["/_next/static/css/a218dfb468eefcdf.css","style"]
0:{"P":null,"b":"zB4SN0XwAB_SWMRVvwFhG","p":"","c":["","blog","react-usedebugvalue"],"i":false,"f":[[["",{"children":["blog",{"children":[["slug","react-usedebugvalue","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/cc1b38a888361ae0.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased ","children":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-100","children":["$","div",null,{"className":"container mx-auto p-4 bg-white rounded-lg shadow-lg","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"$undefined",[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","section",null,{"className":" prose lg:prose-3xl prose-img:rounded-xl prose-headings:underline prose-a:text-lime-600 prose-code:text-lime-500 mx-auto  ","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","react-usedebugvalue","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4","$undefined",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a218dfb468eefcdf.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L5",null,{"children":["$L6","$L7",null]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","qxmT8pNkSGrnVwBHT9WXE",{"children":[["$","$L8",null,{"children":"$L9"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],["$","$La",null,{"children":"$Lb"}]]}],false]],"m":"$undefined","G":["$c","$undefined"],"s":false,"S":true}
d:I[4184,["161","static/chunks/161-e1f62ef38275032d.js","953","static/chunks/app/blog/%5Bslug%5D/page-df444d222e09a7de.js"],""]
e:I[8161,["161","static/chunks/161-e1f62ef38275032d.js","953","static/chunks/app/blog/%5Bslug%5D/page-df444d222e09a7de.js"],"Image"]
f:T1692,<p>useDebugValue adalah hook di React yang digunakan untuk <strong>menambahkan label atau informasi debug ke custom hooks</strong> di React DevTools. Hook ini tidak memiliki efek pada logika aplikasi, tetapi membantu developer memahami nilai atau state yang ada di dalam custom hook saat debugging.</p>
<hr>
<h3><strong>1. Kapan Menggunakan useDebugValue?</strong></h3>
<ul>
<li><strong>Debugging custom hooks</strong>: Memberikan informasi tambahan tentang state atau nilai di dalam custom hook.</li>
<li><strong>Meningkatkan keterbacaan di React DevTools</strong>: Menampilkan nilai penting dari custom hook secara langsung di DevTools.</li>
<li><strong>Kolaborasi tim</strong>: Memudahkan anggota tim untuk memahami alur data dalam custom hook.</li>
</ul>
<hr>
<h3><strong>2. Sintaks Dasar</strong></h3>
<pre><code class="language-javascript">useDebugValue(value);
useDebugValue(value, format); // Dengan fungsi format
</code></pre>
<ul>
<li><strong>value</strong>: Nilai yang ingin ditampilkan di DevTools (bisa berupa string, number, object, atau array).</li>
<li><strong>format</strong> (opsional): Fungsi untuk memformat nilai sebelum ditampilkan (misalnya, mengubah object ke string yang lebih mudah dibaca).</li>
</ul>
<hr>
<h3><strong>3. Contoh Penggunaan</strong></h3>
<h4>a. <strong>Custom Hook Sederhana (Counter)</strong></h4>
<pre><code class="language-jsx">import { useState, useDebugValue } from 'react';

function useCounter(initialValue = 0) {
  const [count, setCount] = useState(initialValue);

  const increment = () => setCount(count + 1);
  const decrement = () => setCount(count - 1);

  // Tampilkan nilai &#x3C;code>count&#x3C;/code> di React DevTools
  useDebugValue(count); // 🛠️ Di DevTools: "useCounter: 0"

  return { count, increment, decrement };
}

// Penggunaan di komponen:
function CounterComponent() {
  const { count, increment, decrement } = useCounter();
  return (
    &#x3C;div>
      &#x3C;p>Count: {count}&#x3C;/p>
      &#x3C;button onClick={increment}>+&#x3C;/button>
      &#x3C;button onClick={decrement}>-&#x3C;/button>
    &#x3C;/div>
  );
}
</code></pre>
<h4>b. <strong>Custom Hook dengan Formatting</strong></h4>
<pre><code class="language-jsx">function useWindowSize() {
  const [windowSize, setWindowSize] = useState({
    width: window.innerWidth,
    height: window.innerHeight,
  });

  useDebugValue(windowSize, (size) => 
    &#x3C;code>Window Size: ${size.width}x${size.height}&#x3C;/code> // Format ke string
  ); // 🛠️ Di DevTools: "useWindowSize: Window Size: 1200x800"

  useEffect(() => {
    const handleResize = () => {
      setWindowSize({
        width: window.innerWidth,
        height: window.innerHeight,
      });
    };
    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  return windowSize;
}
</code></pre>
<hr>
<h3><strong>4. Hasil di React DevTools</strong></h3>
<p>Setelah menggunakan useDebugValue, custom hook akan menampilkan nilai yang ditentukan di DevTools:<br>
<img src="https://i.imgur.com/9kzZJdL.png" alt="React DevTools dengan useDebugValue"></p>
<hr>
<h3><strong>5. Best Practices</strong></h3>
<ol>
<li>
<p><strong>Gunakan untuk Custom Hooks</strong><br>
useDebugValue hanya berguna di dalam <strong>custom hooks</strong>, bukan di komponen biasa.</p>
</li>
<li>
<p><strong>Format Nilai untuk Keterbacaan</strong><br>
Jika nilai kompleks (seperti object), gunakan fungsi format untuk mengubahnya ke string yang lebih jelas:</p>
<pre><code class="language-javascript">useDebugValue(user, (user) => &#x3C;code>User: ${user.name} (${user.email})&#x3C;/code>);
</code></pre>
</li>
<li>
<p><strong>Hindari Komputasi Berat</strong><br>
Jika nilai memerlukan komputasi, gunakan fungsi format untuk optimasi (komputasi hanya dijalankan saat DevTools terbuka):</p>
<pre><code class="language-javascript">useDebugValue(data, (data) => heavyComputation(data));
</code></pre>
</li>
<li>
<p><strong>Hanya untuk Development</strong><br>
useDebugValue tidak berpengaruh di <strong>production build</strong>, jadi tidak perlu khawatir tentang performa.</p>
</li>
</ol>
<hr>
<h3><strong>6. Kapan Tidak Menggunakan useDebugValue?</strong></h3>
<ul>
<li>Di <strong>komponen biasa</strong> (hanya untuk custom hooks).</li>
<li>Untuk <strong>logika bisnis</strong> (tidak memengaruhi perilaku aplikasi).</li>
<li>Jika nilai tidak penting untuk debugging.</li>
</ul>
<hr>
<h3><strong>7. Contoh Kasus Lain</strong></h3>
<h4>a. Debugging Auth Hook</h4>
<pre><code class="language-jsx">function useAuth() {
  const [user, setUser] = useState(null);

  useDebugValue(user, (user) => 
    user ? &#x3C;code>Logged in as ${user.name}&#x3C;/code> : "Not logged in"
  ); // 🛠️ Di DevTools: "useAuth: Logged in as John"

  const login = () => setUser({ name: 'John' });
  const logout = () => setUser(null);

  return { user, login, logout };
}
</code></pre>
<h4>b. Debugging Form Hook</h4>
<pre><code class="language-jsx">function useForm(initialState) {
  const [form, setForm] = useState(initialState);

  useDebugValue(form); // 🛠️ Di DevTools: "useForm: { name: '', email: '' }"

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  return { form, handleChange };
}
</code></pre>
<hr>
<h3><strong>Kesimpulan</strong></h3>
<p>useDebugValue adalah alat yang berguna untuk:</p>
<ul>
<li><strong>Meningkatkan pengalaman debugging</strong> custom hooks di React DevTools.</li>
<li><strong>Menyediakan informasi kontekstual</strong> tentang state atau nilai dalam hook.</li>
<li><strong>Memudahkan kolaborasi tim</strong> dengan membuat logika hook lebih transparan.</li>
</ul>
<p>Gunakan dengan bijak untuk custom hooks yang kompleks atau sering digunakan! 🔍</p>
4:["$","main",null,{"className":"container","children":[["$","div",null,{"className":"border-b dark:bg-slate-800 bg-neutral-50 border-neutral-200","children":["$","div",null,{"className":" mx-auto px-5","children":["$","div",null,{"className":"py-2 text-center text-sm","children":["source code blog ini bisa ditemukan di link ini"," ",["$","a",null,{"href":"https://github.com/mukharomdev/mukharomdev.github.io","className":"underline hover:text-blue-600 duration-200 transition-colors","children":"available on GitHub"}],"."]}]}]}],["$","div",null,{"className":" mx-auto px-5","children":[["$","h2",null,{"className":"text-2xl md:text-4xl font-bold tracking-tight md:tracking-tighter leading-tight mb-20 mt-8 flex items-center","children":[["$","$Ld",null,{"href":"/","className":"hover:underline","children":"Blog"}],"."]}],["$","article",null,{"className":"mb-32","children":[[["$","h1",null,{"className":"text-3xl text-center md:text-5xl lg:text-6xl font-bold tracking-tighter leading-tight md:leading-none mb-12 text-center md:text-left","children":" Penggunaan React useDebugValue"}],["$","div",null,{"className":"hidden md:block md:mb-12","children":["$","div",null,{"className":"flex items-center","children":[["$","img",null,{"src":"/assets/blog/authors/mukharomdev.png","className":"w-12 h-12 rounded-full mr-4","alt":"mukharomdev"}],["$","div",null,{"className":"text-xl font-bold","children":"mukharomdev"}]]}]}],["$","div",null,{"className":"mb-8 md:mb-16 sm:mx-0","children":["$","div",null,{"className":"sm:mx-0","children":["$","$Le",null,{"src":"/assets/blog/reacts/react1.png","alt":"Cover Image for  Penggunaan React useDebugValue","className":"shadow-sm w-full sm:w-[400px] md:w-[600px] lg:w-[800px] max-h-[500px] mx-auto block","width":120,"height":80}]}]}],["$","div",null,{"className":"max-w-2xl mx-auto","children":[["$","div",null,{"className":"block md:hidden mb-6","children":["$","div",null,{"className":"flex items-center","children":[["$","img",null,{"src":"/assets/blog/authors/mukharomdev.png","className":"w-12 h-12 rounded-full mr-4","alt":"mukharomdev"}],["$","div",null,{"className":"text-xl font-bold","children":"mukharomdev"}]]}]}],["$","div",null,{"className":"mb-6 text-lg","children":["$","time",null,{"dateTime":"2025-03-01T08:20:33.141Z","children":"March\t1, 2025"}]}]]}]],["$","div",null,{"className":"max-w-2xl mx-auto","children":["$","div",null,{"className":"markdown-styles_markdown__ORfR8 prose prose-code ","dangerouslySetInnerHTML":{"__html":"$f"}}]}]]}]]}]]}]
9:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
6:null
7:null
b:[["$","title","0",{"children":" Penggunaan React useDebugValue | mukharomdev blog build with Markdown"}],["$","meta","1",{"name":"description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","2",{"property":"og:title","content":" Penggunaan React useDebugValue | mukharomdev blog build with Markdown"}],["$","meta","3",{"property":"og:description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","4",{"property":"og:image","content":"http://localhost:3000/assets/blog/reacts/react1.png"}],["$","meta","5",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","6",{"name":"twitter:title","content":" Penggunaan React useDebugValue | mukharomdev blog build with Markdown"}],["$","meta","7",{"name":"twitter:description","content":"Mini blog seputar pengalaman pribadi dunia pemrograman komputer"}],["$","meta","8",{"name":"twitter:image","content":"http://localhost:3000/assets/blog/reacts/react1.png"}],["$","link","9",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
